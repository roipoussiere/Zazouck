{"name":"Zazouck","tagline":"Zazouck generates stl files to build a wonderful construction from a 3D model.","body":"Zazouck\r\n=====\r\n\r\n## Description\r\nZazouck is an AmaZing Opensource Universal Construction Kit\r\n\r\nThis program generates stl files to build a wonderful construction, from a 3D model. Here is an example of a generated part :\r\n\r\n![A generated part](https://raw2.github.com/roipoussiere/Zazouck/master/pictures/generated_part.png \"A generated part\")\r\n\r\n### The 3d printable parts\r\nThe generated files are 3d printable connectors to connect wood, platic or metal rods together.\r\n\r\nIf you want to create corners with specific angles, you can also use Zazouck manually, without the generator : just use [the Openscad file](scad/corner.scad) or simply go on the [Thingiverse page](http://www.thingiverse.com/thing:179597).\r\n\r\n![Zazouck](https://raw2.github.com/roipoussiere/Zazouck/master/pictures/Zazouck_wide.png \"Zazouck\")\r\n\r\n### The generator\r\nThe program works in 2 steps:\r\n- First, it creates a table file (.csv) which containing the connectors parameters.\r\n- Then, it creates stl files of the connectors, from the table.\r\n\r\n##Installation instuctions\r\n\r\n### On Linux platforms\r\n- Install dependencies:\r\n\r\n    - **git** : You need it to get sources, but you can also download them manually on the GiHub page.\r\n    - **openscad** : The CAD software used to create the files. v2013.05+ is required to generate documentation.\r\n    - **imagemagick** : An image editor, only used to generate the documentation.\r\n\r\n```\r\nsudo apt-get install git openscad imagemagick\r\n```\r\n\r\n- Get the sources\r\n\r\n```\r\n$ cd your_favorite_path\r\n$ git clone https://github.com/roipoussiere/zazouck.git\r\n```\r\n\r\n- Make it easy to use\r\n\r\n```\r\n$ chmod +xX zazouck/python/*.py\r\n$ echo export PATH=$PATH:your_favorite_path/zazouck/python/ >> ~/.bashrc\r\n```\r\n\r\n### On Windows and MacOS platforms\r\n\r\nComming soon...\r\n\r\nYou can try to build from the sources, but it has never tested on these platforms yet.\r\n\r\n##Usage\r\nSee [examples folder](examples/) to get 3D model examples\r\n\r\n- To create a table describing each file, without generate them\r\n\r\n```\r\n$ zazouck cube.stl -b ./table.csv # will create file 'table.csv'\r\n$ zazouck cube.stl -b # will create file 'cube.csv'\r\n```\r\n\r\n- To generate a directory containing all the .stl files\r\n\r\n```\r\n$ zazouck cube.stl # from a 3D model\r\n$ zazouck cube.csv # from a table\r\n```\r\n\r\n- To generate a nice documentation:\r\n\r\n```\r\n$ zazoucko cube.stl -d\r\n```\r\n##Options\r\nUse zazoucko -h to see all available options :\r\n\r\n```\r\nusage: zazouck [-h] [-o OUTPUT_DIR] [-p PARAM_PATH] [-t] [-s FIRST_LINE]\r\n               [-f LAST_LINE] [-d DIR] [-ns] [-nd] [-ni] [-na] [-nf]\r\n               [-V [{1,2,3}]] [-j [NB_JOBS_SLOTS]] [-v]\r\n               input_path\r\n\r\n                               *** Zazouck ***\r\nThis program allows you to build constructions, by generating 3D files\r\nfrom your model. It works in 2 times: first, it build .csv table files\r\ndescribing the parts (very fast), then it compile this one into a lot\r\nof .stl files (can be long). See README.md for getting started.\r\n\r\npositional arguments:\r\n  input_path            3d model (stl file) or model directory if it's already\r\n                        created.\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -o OUTPUT_DIR, --output-dir OUTPUT_DIR\r\n                        Directory where all the files will be exported\r\n                        (current dir. by default)\r\n  -p PARAM_PATH, --param-path PARAM_PATH\r\n                        Load a parameters file from PARAM_PATH, containing the\r\n                        parts parameters.\r\n  -t, --test            The files are quickly compiled for testing, not able\r\n                        to be printed.\r\n  -s FIRST_LINE, --start-from FIRST_LINE\r\n                        Start compilation from line FIRST_LINE in the .csv\r\n                        file.\r\n  -f LAST_LINE, --finish-at LAST_LINE\r\n                        Finish compilation at line LAST_LINE in the .csv file.\r\n  -d DIR, --doc-dir DIR\r\n                        Assembly instructions directory (OUTPUT_DIR/doc by\r\n                        default).\r\n  -ns, --no-stl         Doesn't compile stl files, only build csv tables.\r\n  -nd, --no-doc         Doesn't build assembly instructions.\r\n  -ni, --no-infos       Doesn't make a text file containing informations about\r\n                        the model.\r\n  -na, --no-assembly    Doesn't create the 3d model of the assembly.\r\n  -nf, --no-shuffle     Doesn't shuffle the lists of corners, polygons and\r\n                        edges.\r\n  -V [{1,2,3}], --verbose [{1,2,3}]\r\n                        Verbose level: 1 = OpenScad calls (default value), 2 =\r\n                        OpenScad warnings, 3 = all OpenScad messages.\r\n  -j [NB_JOBS_SLOTS], --jobs [NB_JOBS_SLOTS]\r\n                        Compile NB_JOBS_SLOTS files simultaneously (the number\r\n                        of cores on your computer by default).\r\n  -v, --version         Show program version and exit.\r\n\r\nAuthor: Nathanaël Jourdane - nathanael@jourdane.net\r\nZazouck is licensed under GNU GPLv3: www.gnu.org/licenses/gpl-3.0.html\r\n```\r\n\r\n##Contact\r\n\r\nNathanaël Jourdane : nathanael[AT]jourdane[DOT]net\r\n\r\nThis project is licenced under GNU GPLv3 - see COPYING.txt for details.\r\n","google":"UA-47274416-1","note":"Don't delete this file! It's used internally to help with page regeneration."}