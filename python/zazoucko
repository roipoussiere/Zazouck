#!/usr/bin/python
# -*- coding: utf-8 -*-

# Copyright 2013 Nathanaël Jourdane
# This file is part of Zazoucko.
# Zazoucko is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
# Zazoucko is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
# You should have received a copy of the GNU General Public License along with Zazoucko. If not, see <http://www.gnu.org/licenses/>.

# TODO : alléger avec from .. import ..
from os import path as op
import os, sys, shutil, tempfile
import parser, export

tmp_dir = tempfile.gettempdir()
openscad_path = "openscad"
zazoucko_python_dir = op.abspath(op.dirname(sys.argv[0]))
zazoucko_scad_dir = op.join(op.dirname(zazoucko_python_dir), "scad")
cwd_dir = os.getcwd()

def main():
	class ift(): stl, csv, dir = range(3)

	opt = parser.parser()

	input_type = ift.stl if op.splitext(opt.input_path)[1] == ".stl" else ift.csv if op.splitext(opt.input_path)[1] == ".csv" else ift.dir
	input_stl_path = op.join(cwd_dir, opt.input_path)
	projet_name = op.splitext(op.basename(input_stl_path))[0]
	make_stl = True if (opt.table_path == None and input_type != ift.dir) else False
	export_dir = cwd_dir if not make_stl else op.join(cwd_dir, projet_name) if opt.export_dir == None else opt.export_dir
	doc_dir = None if opt.doc_dir == None else op.join(export_dir, "doc") if opt.doc_dir == op.join(tmp_dir, "_") else opt.doc_dir
	parameter_path = None if opt.parameter_path == None else opt.parameter_path.name
	details_path = None if opt.details_path == None else opt.details_path.name
	full_model_path = None if opt.full_model_path == None else op.join(export_dir, "full_model.stl") if opt.full_model_path.name == op.join(tmp_dir, "_") else opt.full_model_path.name

	if opt.test:
		print "\n*** Testing mode - don't print these files ***\n"

	if make_stl: # si on compile les stl
		table_path = input_stl_path if input_type==ift.csv else op.join(tmp_dir, "table.csv")
	else: # si on construit une table à partir d'un stl (-b [nom_table])
		if input_type == ift.dir:
			table_path = None
		else:
			if opt.table_path.name == op.join(tmp_dir, "_"):
				table_path = op.join(cwd_dir, projet_name + ".csv")
			else:
				table_path = opt.table_path.name

	exp = export.Export(openscad_path, table_path, zazoucko_scad_dir, export_dir, opt.nb_job_slots, opt.verbose, opt.test)

	if input_type == ift.stl:
		exp.make_csv(input_stl_path, details_path, opt.start_from, opt.finish_at, opt.shuffle)

	if doc_dir != None and input_type != ift.dir:
		if os.path.exists(doc_dir):
			shutil.rmtree(doc_dir)
			print "The existing folder '" + op.basename(doc_dir) + "' has been overwriten."
		os.makedirs(doc_dir)
		exp.make_documentation(doc_dir)

	if make_stl:
		if os.path.exists(export_dir):
			shutil.rmtree(export_dir)
			print "The existing folder '" + op.basename(export_dir) + "' has been overwriten."
		os.makedirs(export_dir)
		exp.make_corners()

	# Problème d'import du fichier .scad
	#if full_model_path != None:
		#exp.make_model(export_dir, full_model_path)

main()