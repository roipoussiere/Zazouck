#!/usr/bin/python
# -*- coding: utf-8 -*-

# Copyright 2013-2014 Nathanaël Jourdane
# This file is part of Zazouck.
# Zazouck is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
# Zazouck is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
# You should have received a copy of the GNU General Public License along with Zazouck. If not, see <http://www.gnu.org/licenses/>.

# TODO : alléger avec from .. import ..
from os import path as op
import os, sys, shutil
import parser, export, roddy

openscad_path = "openscad"
zazouck_python_dir = op.abspath(op.dirname(sys.argv[0]))
scad_dir = op.join(op.dirname(zazouck_python_dir), "scad")

class m(): roddy = range(1); # liste des modules disponibles

def _create_dir(directory):
	if os.path.exists(directory):
		shutil.rmtree(directory)
		print "The existing folder '" + op.basename(directory) + "' has been overwriten."
	os.makedirs(directory)

def main():
	opt = parser.parser()

	is_input_stl = True if (op.splitext(opt.input_path)[1] == ".stl") else False
	projet_name = op.splitext(op.basename(opt.input_path))[0]
	input_stl_path = op.join(os.getcwd(), opt.input_path) if is_input_stl else None
	project_dir = opt.input_path if not is_input_stl else \
			op.join(os.getcwd(), projet_name) if (opt.output_dir == None) else opt.output_dir
	param_path = None if opt.param_path == None else opt.param_path.name
	doc_dir = op.join(project_dir, "doc") if (opt.doc_dir == False) else opt.doc_dir.name
	infos_path = op.join(project_dir, "infos.txt")
	#assembly_path = op.join(project_dir, "assembly.stl") if opt.assembly else None

	module = m.roddy # à remplacer par un paramètre

	if is_input_stl:
		_create_dir(project_dir)
		shutil.copy(opt.input_path, op.join(project_dir, "original.stl"))
		
		if module == m.roddy:
			roddy.Roddy(input_stl_path, project_dir) # crée le fichier zaz
		#elif module == ...

	if opt.infos:

		# TODO: afficher quelques infos de base

		sys.exit(0)

	exp = export.Export(project_dir, openscad_path, scad_dir, opt.jobs, opt.verbose, opt.test)
	exp.make_documentation(doc_dir)
	exp.make_stl()

	# TODO: Problème d'import du fichier scad :/
	#if full_model_path != None:
		#exp.make_model(project_dir, full_model_path)

main()